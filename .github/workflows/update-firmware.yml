name: Update RPi Firmware

on:
  schedule:
    - cron: '0 13 * * *'  # t√§glich um 13:00 UTC
  workflow_dispatch:

jobs:
  update-rpi-firmware:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install tools
        run: sudo apt update && sudo apt install -y git wget unzip

      - name: Clone RPi Firmware Repo
        run: |
          git clone --depth=1 https://github.com/raspberrypi/firmware.git

      - name: Prepare target directories
        run: |
          mkdir -p rpi_firmware/rpi3 rpi_firmware/rpi4 rpi_firmware/rpi5

      - name: Copy RPi3 files
        run: |
          cd firmware/boot
          cp -v \
            bootcode.bin \
            cmdline.txt \
            config.txt \
            fixup.dat fixup_cd.dat fixup_db.dat fixup_x.dat \
            start.elf start_cd.elf start_db.elf start_x.elf \
            kernel8.img \
            bcm2710-rpi-3-b.dtb \
            "fixup copy.dat" \
            "start copy.elf" \
            ../../rpi_firmware/rpi3/
          cp -rv overlays ../../rpi_firmware/rpi3/

      - name: Copy RPi4 files
        run: |
          cd firmware/boot
          cp -v \
            cmdline.txt \
            config.txt \
            fixup4.dat fixup4cd.dat fixup4db.dat fixup4x.dat \
            start4.elf start4cd.elf start4db.elf start4x.elf \
            kernel8.img \
            bcm2711-rpi-4-b.dtb \
            ../../rpi_firmware/rpi4/
          cp -rv overlays ../../rpi_firmware/rpi4/

      - name: Copy RPi5 files
        run: |
          cd firmware/boot
          cp -v \
            cmdline.txt \
            config.txt \
            fixup4.dat fixup4cd.dat fixup4db.dat fixup4x.dat \
            start4.elf start4cd.elf start4db.elf start4x.elf \
            kernel8.img \
            Image \
            Image.gz \
            bcm2712-rpi-5-b.dtb \
            ../../rpi_firmware/rpi5/
          cp -rv overlays ../../rpi_firmware/rpi5/

      - name: Commit and Push if changes
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add rpi_firmware/
          if ! git diff --quiet --cached; then
            git commit -m "Auto-update RPi firmware (boot/) on $(date -u +'%Y-%m-%d %H:%M UTC')"
            git push
          else
            echo "No changes to commit."
